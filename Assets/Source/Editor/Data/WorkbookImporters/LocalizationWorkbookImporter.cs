/* -------------------------------------------------------
 * WARNING:
 *
 * This code was generated by the Excel Importer
 * Any changes will be lost, when it gets regenerated.
 * -----------------------------------------------------*/

using ExcelImporter.Editor.ExcelProcessing;
using ExcelImporter.Editor.Importing;
using System;
using System.IO;
using UnityEditor;
using UnityEngine;
using Game.Data.Tables;

namespace Game.Editor.Data.Importers
{
    public class LocalizationWorkbookImporter
    {
        private const string ExcelFilePath = "Assets/Game/Data/Localization.xlsx";
        private const string ImportBasePath = "Assets/Game/Data/Imports/";
        private const bool PrefixAssetName = false;

        [MenuItem("Tools/Excel Importer/Import LocalizationWorkbookImporter", priority = 300)]
        public static void Import()
        {
            try
            {
                EditorUtility.DisplayProgressBar("Excel Importer", "Loading Workbook", 0f);
                var workbook = ExcelWorkbookFactory.Create(ExcelFilePath);

                EditorUtility.DisplayProgressBar("Excel Importer", "Importing Sheet: Localization", 0.5f);
                HandleSheet<LocalizationTable, LocalizationTable.Row>(workbook, "Localization");

                EditorUtility.DisplayProgressBar("Excel Importer", "Importing Sheet: Placeholders", 1f);
                HandleSheet<PlaceholdersTable, PlaceholdersTable.Row>(workbook, "Placeholders");



                EditorUtility.DisplayProgressBar("Excel Importer", "Saving Assets", 1f);
                AssetDatabase.SaveAssets();

                UnityEngine.Debug.Log($"Imported {workbook.Sheets.Count} sheets from {workbook.FilePath}");
            }
            catch (Exception e)
            {
                EditorUtility.DisplayDialog(nameof(LocalizationWorkbookImporter), "Import Failed! See console log for details", "Ok");
                UnityEngine.Debug.LogError(e);
            }

            EditorUtility.ClearProgressBar();
        }

        private static void HandleSheet<TSheet, TRow>(ExcelWorkbook workbook, string sheetName)
            where TSheet : ScriptableObject
            where TRow : new()
        {
            var importFilename = GetImportFilePath(workbook, sheetName, ImportBasePath, PrefixAssetName);
            SheetImporter.ImportData<TSheet, TRow>(workbook, sheetName, importFilename);
        }

        private static string GetImportFilePath(ExcelWorkbook workbook, string sheetName, string importBasePath, bool prefixAssetName)
        {
            var prefix = prefixAssetName ? $"{workbook.Name}." : string.Empty;
            var filename = $"{prefix}{sheetName}.asset";

            return Path.Combine(importBasePath, filename);
        }
    }
}
